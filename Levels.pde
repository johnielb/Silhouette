class Levels {
  public int[][][] getEasyBoard(int n) {
    switch (n) {
      case 0:
        return new int[][][] {
          {
            {1, 1, 1, 1, 1, 1},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0}
          },
          { 
            {1, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0}
          }
        };
      case 1:
        return new int[][][] {
          {
            {1, 0, 0, 0, 0, 0},
            {1, 0, 0, 0, 0, 0},
            {1, 1, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0}
          },
          { 
            {1, 1, 1, 0, 0, 0},
            {1, 0, 1, 0, 0, 0},
            {0, 0, 1, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0}
          }
        };
      case 2:
        return new int[][][] {
          {
            {0, 0, 1, 0, 0, 0},
            {0, 0, 1, 1, 1, 0},
            {0, 0, 0, 0, 1, 0},
            {0, 0, 0, 0, 1, 0},
            {0, 1, 1, 1, 1, 0},
            {0, 0, 0, 0, 0, 0}
          },
          { 
            {1, 0, 0, 0, 0, 0},
            {1, 0, 0, 0, 0, 0},
            {1, 0, 0, 0, 0, 0},
            {1, 0, 0, 0, 0, 0},
            {1, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0}
          }
        };
      case 3:
        return new int[][][] {
          {
            {1, 0, 1, 0, 1, 0},
            {1, 0, 1, 0, 1, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0}
          },
          { 
            {1, 0, 1, 0, 1, 0},
            {1, 0, 1, 0, 1, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0}
          }
        };
      case 4:
        return new int[][][] {
          {
            {1, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 1},
            {1, 1, 1, 1, 1, 1}
          },
          { 
            {0, 0, 0, 0, 0, 1},
            {0, 0, 0, 0, 0, 1},
            {0, 0, 0, 0, 0, 1},
            {0, 0, 0, 0, 0, 1},
            {0, 0, 0, 0, 0, 1},
            {0, 0, 0, 0, 0, 1}
          }
        };
      case 5:
        return new int[][][] {
          {
            {1, 0, 0, 0, 0, 0},
            {1, 0, 0, 0, 0, 0},
            {1, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0}
          },
          { 
            {0, 1, 1, 1, 1, 0},
            {0, 0, 1, 1, 0, 0},
            {0, 1, 1, 1, 1, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0}
          }
        };
      case 6:
        return new int[][][] {
          {
            {0, 0, 0, 1, 0, 0},
            {0, 0, 0, 1, 0, 0},
            {0, 1, 1, 1, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0}
          },
          { 
            {0, 1, 1, 1, 0, 0},
            {0, 0, 1, 0, 0, 0},
            {0, 0, 1, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0}
          }
        };
      case 7:
        return new int[][][] {
          {
            {1, 0, 0, 0, 0, 0},
            {1, 0, 0, 0, 0, 0},
            {1, 0, 0, 0, 0, 0},
            {1, 0, 0, 0, 0, 0},
            {1, 0, 0, 0, 0, 0},
            {1, 1, 1, 1, 1, 1}
          },
          { 
            {0, 0, 0, 1, 0, 0},
            {0, 0, 0, 1, 0, 0},
            {0, 0, 0, 1, 0, 0},
            {0, 0, 0, 1, 0, 0},
            {0, 0, 0, 1, 0, 0},
            {1, 1, 1, 1, 1, 1}
          }
        };
      case 8:
        return new int[][][] {
          {
            {0, 0, 1, 1, 0, 0},
            {0, 0, 0, 1, 1, 0},
            {0, 0, 0, 0, 1, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0}
          },
          { 
            {0, 0, 1, 1, 0, 0},
            {0, 0, 0, 1, 0, 0},
            {0, 0, 1, 1, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0}
          }
        };
      case 9:
        return new int[][][] {
          {
            {0, 1, 0, 0, 1, 0},
            {0, 1, 0, 0, 1, 0},
            {0, 1, 0, 0, 1, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0}
          },
          { 
            {1, 1, 1, 1, 1, 1},
            {0, 1, 1, 1, 1, 0},
            {0, 0, 1, 1, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0}
          }
        };
      default:
        throw new RuntimeException("Level loading broken.");        
    }
  }
  public int[] getEasyInfo(int n) {
    switch (n) {
      case 0:
        return new int[] {6,6};
      case 1:
        return new int[] {7,7};
      case 2:
        return new int[] {10,10};
      case 3:
        return new int[] {6,18};
      case 4:
        return new int[] {16,16};
      case 5:
        return new int[] {10,10};
      case 6:
        return new int[] {7,7};
      case 7:
        return new int[] {15,41};
      case 8:
        return new int[] {6,10};
      case 9:
        return new int[] {12,24};
      default:
        throw new RuntimeException("Level loading broken.");
    }
  }
  public int[][][] getMediumBoard(int n) {
    switch (n) {
      case 0:
        return new int[][][] {
          {
            {1, 0, 1, 1, 0, 0},
            {1, 0, 1, 0, 0, 0},
            {0, 0, 1, 0, 0, 0},
            {0, 0, 1, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0}
          },
          { 
            {1, 0, 0, 0, 1, 1},
            {1, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0},
            {1, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0}
          }
        };
      case 1:
        return new int[][][] {
          {
            {0, 0, 0, 0, 0, 1},
            {0, 0, 0, 0, 0, 1},
            {0, 0, 0, 0, 0, 1},
            {0, 1, 0, 0, 0, 1},
            {0, 1, 0, 0, 0, 1},
            {0, 1, 1, 1, 1, 1}
          },
          { 
            {1, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 1},
            {1, 1, 1, 1, 1, 1}
          }
        };
      case 2:
        return new int[][][] {
          {
            {1, 1, 1, 1, 1, 1},
            {1, 0, 1, 0, 0, 1},
            {1, 0, 1, 0, 0, 1},
            {1, 0, 1, 0, 0, 1},
            {1, 0, 1, 0, 0, 1},
            {1, 1, 1, 1, 1, 1}
          },
          {
            {1, 1, 1, 1, 1, 1},
            {1, 0, 0, 1, 0, 1},
            {1, 0, 0, 1, 0, 1},
            {1, 0, 0, 1, 0, 1},
            {1, 0, 0, 1, 0, 1},
            {1, 1, 1, 1, 1, 1}
          }
        };
      case 3:
        return new int[][][] {
          {
            {1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 0},
            {1, 1, 1, 1, 0, 0},
            {1, 1, 1, 0, 0, 0},
            {1, 1, 0, 0, 0, 0},
            {1, 0, 0, 0, 0, 0}
          },
          { 
            {1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 0},
            {1, 1, 1, 1, 0, 0},
            {1, 1, 1, 0, 0, 0},
            {1, 1, 0, 0, 0, 0},
            {1, 0, 0, 0, 0, 0}
          }
        };
      case 4:
        return new int[][][] {
          {
            {1, 0, 0, 0, 0, 0},
            {1, 0, 0, 0, 0, 0},
            {1, 0, 0, 0, 0, 0},
            {1, 0, 0, 0, 0, 0},
            {1, 0, 0, 0, 0, 0},
            {1, 1, 1, 1, 1, 1}
          },
          { 
            {0, 1, 0, 0, 0, 1},
            {0, 1, 1, 1, 1, 1},
            {0, 1, 0, 0, 0, 0},
            {0, 1, 0, 0, 0, 0},
            {0, 1, 0, 0, 0, 0},
            {1, 1, 1, 1, 1, 1}
          }
        };
      case 5:
        return new int[][][] {
          {
            {0, 0, 0, 0, 1, 0},
            {0, 0, 0, 0, 1, 0},
            {0, 1, 1, 1, 1, 0},
            {0, 1, 0, 0, 1, 0},
            {0, 1, 0, 0, 1, 0},
            {0, 1, 1, 1, 1, 0}
          },
          { 
            {1, 0, 0, 0, 0, 0},
            {1, 0, 0, 1, 0, 0},
            {1, 1, 1, 1, 0, 0},
            {1, 0, 0, 1, 0, 0},
            {1, 0, 0, 0, 0, 0},
            {1, 0, 0, 0, 0, 0}
          }
        };
      case 6:
        return new int[][][] {
          {
            {0, 1, 0, 0, 1, 0},
            {0, 1, 0, 0, 1, 1},
            {0, 1, 1, 1, 1, 0},
            {0, 1, 0, 0, 1, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0}
          },
          { 
            {0, 0, 1, 1, 1, 1},
            {0, 0, 0, 1, 1, 1},
            {0, 0, 0, 0, 1, 1},
            {0, 0, 0, 0, 0, 1},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0}
          }
        };
      case 7:
        return new int[][][] {
          {
            {1, 0, 1, 0, 0, 1},
            {1, 0, 1, 0, 0, 1},
            {1, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 1},
            {1, 1, 1, 1, 1, 1},
            {0, 0, 0, 0, 0, 0}
          },
          { 
            {1, 0, 0, 1, 0, 1},
            {1, 0, 0, 1, 0, 1},
            {1, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 1},
            {0, 0, 0, 0, 0, 0}
          }
        };
      case 8:
        return new int[][][] {
          {
            {0, 0, 1, 1, 1, 1},
            {0, 0, 1, 0, 0, 0},
            {0, 0, 1, 0, 0, 0},
            {0, 0, 1, 0, 0, 0},
            {0, 0, 1, 0, 0, 0},
            {1, 1, 1, 0, 0, 0}
          },
          { 
            {0, 0, 0, 0, 1, 1},
            {0, 0, 0, 0, 1, 0},
            {0, 1, 1, 1, 1, 0},
            {0, 1, 0, 0, 0, 0},
            {0, 1, 0, 0, 0, 0},
            {1, 1, 0, 0, 0, 0}
          }
        };
      case 9:
        return new int[][][] {
          {
            {1, 1, 0, 0, 1, 1},
            {0, 0, 0, 0, 1, 1},
            {0, 0, 0, 0, 0, 1},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0}
          },
          { 
            {1, 1, 1, 0, 0, 1},
            {1, 0, 1, 0, 0, 1},
            {1, 1, 0, 0, 0, 1},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0}
          }
        };
      default:
        throw new RuntimeException("Level loading broken.");        
    }
  }
  public int[] getMediumInfo(int n) {
    switch (n) {
      case 0:
        return new int[] {7,15};
      case 1:
        return new int[] {21,44};
      case 2:
        return new int[] {24,108};
      case 3:
        return new int[] {21,91};
      case 4:
        return new int[] {16,46};
      case 5:
        return new int[] {18,29};
      case 6:
        return new int[] {13,27};
      case 7:
        return new int[] {16,38};
      case 8:
        return new int[] {11,21};
      case 9:
        return new int[] {10,25};
      default:
        throw new RuntimeException("Level loading broken.");
    }
  }
  public int[][][] getHardBoard(int n) {
    switch (n) {
      case 0:
        return new int[][][] {
          {
            {0, 0, 0, 0, 0, 1},
            {0, 0, 0, 0, 1, 0},
            {0, 0, 0, 0, 1, 0},
            {0, 0, 0, 0, 0, 1},
            {0, 0, 0, 0, 0, 1},
            {1, 1, 1, 1, 1, 1}
          },
          { 
            {1, 1, 1, 1, 1, 1},
            {1, 0, 0, 0, 0, 0},
            {1, 0, 0, 0, 0, 0},
            {1, 0, 0, 0, 0, 0},
            {1, 0, 0, 0, 0, 0},
            {1, 0, 0, 0, 0, 0}
          }
        };
      case 1:
        return new int[][][] {
          {
            {1, 1, 1, 0, 0, 0},
            {1, 0, 0, 0, 0, 0},
            {1, 1, 1, 1, 1, 1},
            {0, 0, 0, 0, 0, 1},
            {0, 0, 0, 1, 1, 1},
            {0, 0, 0, 0, 0, 0}
          },
          { 
            {0, 0, 0, 1, 1, 1},
            {0, 0, 0, 0, 0, 1},
            {1, 1, 1, 1, 1, 1},
            {1, 0, 0, 0, 0, 0},
            {1, 1, 1, 0, 0, 0},
            {0, 0, 0, 0, 0, 0}
          }
        };
      case 2:
        return new int[][][] {
          {
            {1, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 1, 1},
            {1, 1, 0, 0, 1, 0},
            {0, 1, 0, 0, 1, 1},
            {0, 1, 0, 0, 0, 1},
            {1, 1, 0, 0, 0, 0}
          },
          { 
            {1, 0, 0, 0, 0, 1},
            {1, 1, 0, 0, 0, 1},
            {0, 1, 0, 0, 1, 1},
            {1, 1, 0, 0, 1, 0},
            {1, 0, 0, 0, 1, 0},
            {0, 0, 0, 0, 1, 1}
          }
        };
      case 3:
        return new int[][][] {
          {
            {1, 0, 1, 0, 0, 1},
            {1, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 1},
            {1, 1, 1, 1, 0, 1},
            {1, 0, 0, 1, 0, 1},
            {1, 0, 0, 1, 1, 1}
          },
          { 
            {1, 0, 0, 0, 1, 1},
            {1, 0, 0, 1, 1, 0},
            {1, 0, 1, 1, 0, 0},
            {1, 1, 1, 0, 0, 0},
            {1, 0, 1, 1, 0, 0},
            {1, 0, 0, 1, 1, 0}
          }
        };
      case 4:
        return new int[][][] {
          {
            {0, 0, 0, 0, 1, 0},
            {0, 0, 1, 1, 1, 0},
            {0, 1, 1, 0, 1, 0},
            {0, 1, 0, 1, 1, 0},
            {0, 1, 1, 1, 0, 0},
            {0, 0, 0, 0, 0, 0}
          },
          { 
            {0, 0, 1, 1, 1, 0},
            {1, 1, 1, 0, 1, 0},
            {1, 0, 0, 0, 1, 0},
            {1, 0, 1, 1, 1, 0},
            {1, 1, 1, 0, 0, 0},
            {0, 0, 0, 0, 0, 0}
          }
        };
      case 5:
        return new int[][][] {
          {
            {0, 1, 0, 0, 1, 0},
            {1, 1, 0, 0, 1, 1},
            {1, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 1},
            {1, 1, 0, 0, 1, 1},
            {0, 1, 1, 1, 1, 0}
          },
          { 
            {0, 1, 0, 0, 1, 0},
            {1, 1, 0, 0, 1, 1},
            {1, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 1},
            {1, 1, 0, 0, 1, 1},
            {0, 1, 1, 1, 1, 0}
          }
        };
      case 6:
        return new int[][][] {
          {
            {1, 0, 0, 0, 0, 0},
            {1, 1, 0, 0, 0, 0},
            {0, 1, 0, 0, 0, 0},
            {0, 1, 0, 0, 0, 0},
            {0, 1, 1, 0, 0, 0},
            {1, 1, 1, 1, 1, 1}
          },
          {
            {0, 0, 0, 0, 0, 1},
            {0, 0, 0, 0, 1, 1},
            {0, 0, 0, 0, 1, 0},
            {0, 0, 0, 0, 1, 0},
            {0, 0, 0, 1, 1, 0},
            {1, 1, 1, 1, 1, 1}
          }
        };
      case 7:
        return new int[][][] {
          {
            {0, 0, 0, 0, 1, 1},
            {0, 0, 0, 0, 1, 0},
            {0, 0, 1, 1, 1, 0},
            {0, 0, 1, 1, 1, 0},
            {0, 0, 1, 0, 0, 0},
            {0, 0, 0, 0, 0, 0}
          },
          { 
            {1, 1, 1, 1, 1, 0},
            {1, 0, 0, 0, 1, 0},
            {0, 0, 0, 0, 1, 0},
            {0, 0, 0, 0, 1, 0},
            {0, 0, 0, 1, 1, 0},
            {0, 0, 0, 0, 0, 0}
          }
        };
      case 8:
        return new int[][][] {
          {
            {0, 0, 1, 0, 0, 0},
            {0, 0, 1, 0, 0, 0},
            {1, 1, 1, 0, 0, 0},
            {1, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 1},
            {1, 1, 1, 1, 1, 1}
          },
          { 
            {0, 1, 1, 1, 0, 0},
            {0, 0, 0, 1, 0, 0},
            {0, 0, 0, 1, 0, 0},
            {0, 1, 1, 1, 0, 0},
            {0, 1, 0, 0, 0, 0},
            {0, 1, 0, 0, 0, 0}
          }
        };
      case 9:
        return new int[][][] {
          {
            {1, 1, 1, 1, 1, 1},
            {1, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 1},
            {1, 1, 1, 1, 1, 1}
          },
          { 
            {1, 0, 0, 1, 1, 1},
            {1, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 1},
            {1, 1, 1, 0, 0, 1}
          }
        };
      default:
        throw new RuntimeException("Level loading broken.");        
    }
  }
  public int[] getHardInfo(int n) {
    switch (n) {
      case 0:
        return new int[] {16,16};
      case 1:
        return new int[] {14,56};
      case 2:
        return new int[] {15,39};
      case 3:
        return new int[] {21,57};
      case 4:
        return new int[] {17,42};
      case 5:
        return new int[] {18,60};
      case 6:
        return new int[] {13,47};
      case 7:
        return new int[] {15,20};
      case 8:
        return new int[] {18,21};
      case 9:
        return new int[] {20,64};
      default:
        throw new RuntimeException("Level loading broken.");
    }
  }
}
